/*
 * This file is generated by jOOQ.
 */
package cn.com.ho.workflow.infrastructure.db.tables.records;


import cn.com.ho.workflow.infrastructure.db.tables.BpmConfCountersign;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BpmConfCountersignRecord extends UpdatableRecordImpl<BpmConfCountersignRecord> implements Record10<String, String, String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 882409366;

    /**
     * Setter for <code>workflow.bpm_conf_countersign.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>workflow.bpm_conf_countersign.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>workflow.bpm_conf_countersign.sequential</code>. 串行/并行
     */
    public void setSequential(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>workflow.bpm_conf_countersign.sequential</code>. 串行/并行
     */
    public String getSequential() {
        return (String) get(1);
    }

    /**
     * Setter for <code>workflow.bpm_conf_countersign.participant</code>. 参与者
     */
    public void setParticipant(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>workflow.bpm_conf_countersign.participant</code>. 参与者
     */
    public String getParticipant() {
        return (String) get(2);
    }

    /**
     * Setter for <code>workflow.bpm_conf_countersign.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>workflow.bpm_conf_countersign.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>workflow.bpm_conf_countersign.rate</code>.
     */
    public void setRate(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>workflow.bpm_conf_countersign.rate</code>.
     */
    public String getRate() {
        return (String) get(4);
    }

    /**
     * Setter for <code>workflow.bpm_conf_countersign.node_id</code>.
     */
    public void setNodeId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>workflow.bpm_conf_countersign.node_id</code>.
     */
    public String getNodeId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>workflow.bpm_conf_countersign.process_model_id</code>.
     */
    public void setProcessModelId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>workflow.bpm_conf_countersign.process_model_id</code>.
     */
    public String getProcessModelId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>workflow.bpm_conf_countersign.status</code>.
     */
    public void setStatus(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>workflow.bpm_conf_countersign.status</code>.
     */
    public String getStatus() {
        return (String) get(7);
    }

    /**
     * Setter for <code>workflow.bpm_conf_countersign.node_name</code>.
     */
    public void setNodeName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>workflow.bpm_conf_countersign.node_name</code>.
     */
    public String getNodeName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>workflow.bpm_conf_countersign.node_code</code>.
     */
    public void setNodeCode(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>workflow.bpm_conf_countersign.node_code</code>.
     */
    public String getNodeCode() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<String, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<String, String, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return BpmConfCountersign.BPM_CONF_COUNTERSIGN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return BpmConfCountersign.BPM_CONF_COUNTERSIGN.SEQUENTIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return BpmConfCountersign.BPM_CONF_COUNTERSIGN.PARTICIPANT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return BpmConfCountersign.BPM_CONF_COUNTERSIGN.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return BpmConfCountersign.BPM_CONF_COUNTERSIGN.RATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return BpmConfCountersign.BPM_CONF_COUNTERSIGN.NODE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return BpmConfCountersign.BPM_CONF_COUNTERSIGN.PROCESS_MODEL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return BpmConfCountersign.BPM_CONF_COUNTERSIGN.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return BpmConfCountersign.BPM_CONF_COUNTERSIGN.NODE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return BpmConfCountersign.BPM_CONF_COUNTERSIGN.NODE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSequential();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getParticipant();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getNodeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getProcessModelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getNodeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getNodeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSequential();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getParticipant();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getNodeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getProcessModelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getNodeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getNodeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BpmConfCountersignRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BpmConfCountersignRecord value2(String value) {
        setSequential(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BpmConfCountersignRecord value3(String value) {
        setParticipant(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BpmConfCountersignRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BpmConfCountersignRecord value5(String value) {
        setRate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BpmConfCountersignRecord value6(String value) {
        setNodeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BpmConfCountersignRecord value7(String value) {
        setProcessModelId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BpmConfCountersignRecord value8(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BpmConfCountersignRecord value9(String value) {
        setNodeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BpmConfCountersignRecord value10(String value) {
        setNodeCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BpmConfCountersignRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BpmConfCountersignRecord
     */
    public BpmConfCountersignRecord() {
        super(BpmConfCountersign.BPM_CONF_COUNTERSIGN);
    }

    /**
     * Create a detached, initialised BpmConfCountersignRecord
     */
    public BpmConfCountersignRecord(String id, String sequential, String participant, String type, String rate, String nodeId, String processModelId, String status, String nodeName, String nodeCode) {
        super(BpmConfCountersign.BPM_CONF_COUNTERSIGN);

        set(0, id);
        set(1, sequential);
        set(2, participant);
        set(3, type);
        set(4, rate);
        set(5, nodeId);
        set(6, processModelId);
        set(7, status);
        set(8, nodeName);
        set(9, nodeCode);
    }
}
