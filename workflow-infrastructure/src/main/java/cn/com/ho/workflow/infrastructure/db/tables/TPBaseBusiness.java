/*
 * This file is generated by jOOQ.
 */
package cn.com.ho.workflow.infrastructure.db.tables;


import cn.com.ho.workflow.infrastructure.db.Indexes;
import cn.com.ho.workflow.infrastructure.db.Keys;
import cn.com.ho.workflow.infrastructure.db.Workflow;
import cn.com.ho.workflow.infrastructure.db.tables.records.TPBaseBusinessRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPBaseBusiness extends TableImpl<TPBaseBusinessRecord> {

    private static final long serialVersionUID = 1940111444;

    /**
     * The reference instance of <code>workflow.t_p_base_business</code>
     */
    public static final TPBaseBusiness T_P_BASE_BUSINESS = new TPBaseBusiness();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPBaseBusinessRecord> getRecordType() {
        return TPBaseBusinessRecord.class;
    }

    /**
     * The column <code>workflow.t_p_base_business.id</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>workflow.t_p_base_business.title</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.remark</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.status</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.is_claim</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> IS_CLAIM = createField("is_claim", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.proc_inst_id</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> PROC_INST_ID = createField("proc_inst_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.bus_table</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> BUS_TABLE = createField("bus_table", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.priority</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.submit_time</code>.
     */
    public final TableField<TPBaseBusinessRecord, LocalDateTime> SUBMIT_TIME = createField("submit_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>workflow.t_p_base_business.submitter</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> SUBMITTER = createField("submitter", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.module</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> MODULE = createField("module", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.parent_id</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.accept_user</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> ACCEPT_USER = createField("accept_user", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.applicant</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> APPLICANT = createField("applicant", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.bus_dept</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> BUS_DEPT = createField("bus_dept", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.t_p_base_business.submitter_en</code>.
     */
    public final TableField<TPBaseBusinessRecord, String> SUBMITTER_EN = createField("submitter_en", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>workflow.t_p_base_business</code> table reference
     */
    public TPBaseBusiness() {
        this(DSL.name("t_p_base_business"), null);
    }

    /**
     * Create an aliased <code>workflow.t_p_base_business</code> table reference
     */
    public TPBaseBusiness(String alias) {
        this(DSL.name(alias), T_P_BASE_BUSINESS);
    }

    /**
     * Create an aliased <code>workflow.t_p_base_business</code> table reference
     */
    public TPBaseBusiness(Name alias) {
        this(alias, T_P_BASE_BUSINESS);
    }

    private TPBaseBusiness(Name alias, Table<TPBaseBusinessRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPBaseBusiness(Name alias, Table<TPBaseBusinessRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TPBaseBusiness(Table<O> child, ForeignKey<O, TPBaseBusinessRecord> key) {
        super(child, key, T_P_BASE_BUSINESS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Workflow.WORKFLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_P_BASE_BUSINESS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPBaseBusinessRecord> getPrimaryKey() {
        return Keys.SYNTHETIC_PK_T_P_BASE_BUSINESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPBaseBusinessRecord>> getKeys() {
        return Arrays.<UniqueKey<TPBaseBusinessRecord>>asList(Keys.T_P_BASE_BUSINESS_PK, Keys.SYNTHETIC_PK_T_P_BASE_BUSINESS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPBaseBusiness as(String alias) {
        return new TPBaseBusiness(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPBaseBusiness as(Name alias) {
        return new TPBaseBusiness(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPBaseBusiness rename(String name) {
        return new TPBaseBusiness(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TPBaseBusiness rename(Name name) {
        return new TPBaseBusiness(name, null);
    }
}
