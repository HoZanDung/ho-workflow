/*
 * This file is generated by jOOQ.
 */
package cn.com.ho.workflow.infrastructure.db.tables;


import cn.com.ho.workflow.infrastructure.db.Indexes;
import cn.com.ho.workflow.infrastructure.db.Keys;
import cn.com.ho.workflow.infrastructure.db.Workflow;
import cn.com.ho.workflow.infrastructure.db.tables.records.ActEvtLogRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActEvtLog extends TableImpl<ActEvtLogRecord> {

    private static final long serialVersionUID = -1490113096;

    /**
     * The reference instance of <code>workflow.act_evt_log</code>
     */
    public static final ActEvtLog ACT_EVT_LOG = new ActEvtLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActEvtLogRecord> getRecordType() {
        return ActEvtLogRecord.class;
    }

    /**
     * The column <code>workflow.act_evt_log.log_nr_</code>.
     */
    public final TableField<ActEvtLogRecord, Integer> LOG_NR_ = createField("log_nr_", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('workflow.act_evt_log_log_nr__seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>workflow.act_evt_log.type_</code>.
     */
    public final TableField<ActEvtLogRecord, String> TYPE_ = createField("type_", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>workflow.act_evt_log.proc_def_id_</code>.
     */
    public final TableField<ActEvtLogRecord, String> PROC_DEF_ID_ = createField("proc_def_id_", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>workflow.act_evt_log.proc_inst_id_</code>.
     */
    public final TableField<ActEvtLogRecord, String> PROC_INST_ID_ = createField("proc_inst_id_", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>workflow.act_evt_log.execution_id_</code>.
     */
    public final TableField<ActEvtLogRecord, String> EXECUTION_ID_ = createField("execution_id_", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>workflow.act_evt_log.task_id_</code>.
     */
    public final TableField<ActEvtLogRecord, String> TASK_ID_ = createField("task_id_", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>workflow.act_evt_log.time_stamp_</code>.
     */
    public final TableField<ActEvtLogRecord, LocalDateTime> TIME_STAMP_ = createField("time_stamp_", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>workflow.act_evt_log.user_id_</code>.
     */
    public final TableField<ActEvtLogRecord, String> USER_ID_ = createField("user_id_", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>workflow.act_evt_log.data_</code>.
     */
    public final TableField<ActEvtLogRecord, byte[]> DATA_ = createField("data_", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>workflow.act_evt_log.lock_owner_</code>.
     */
    public final TableField<ActEvtLogRecord, String> LOCK_OWNER_ = createField("lock_owner_", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>workflow.act_evt_log.lock_time_</code>.
     */
    public final TableField<ActEvtLogRecord, LocalDateTime> LOCK_TIME_ = createField("lock_time_", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>workflow.act_evt_log.is_processed_</code>.
     */
    public final TableField<ActEvtLogRecord, Short> IS_PROCESSED_ = createField("is_processed_", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * Create a <code>workflow.act_evt_log</code> table reference
     */
    public ActEvtLog() {
        this(DSL.name("act_evt_log"), null);
    }

    /**
     * Create an aliased <code>workflow.act_evt_log</code> table reference
     */
    public ActEvtLog(String alias) {
        this(DSL.name(alias), ACT_EVT_LOG);
    }

    /**
     * Create an aliased <code>workflow.act_evt_log</code> table reference
     */
    public ActEvtLog(Name alias) {
        this(alias, ACT_EVT_LOG);
    }

    private ActEvtLog(Name alias, Table<ActEvtLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActEvtLog(Name alias, Table<ActEvtLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ActEvtLog(Table<O> child, ForeignKey<O, ActEvtLogRecord> key) {
        super(child, key, ACT_EVT_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Workflow.WORKFLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACT_EVT_LOG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ActEvtLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACT_EVT_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActEvtLogRecord> getPrimaryKey() {
        return Keys.ACT_EVT_LOG_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActEvtLogRecord>> getKeys() {
        return Arrays.<UniqueKey<ActEvtLogRecord>>asList(Keys.ACT_EVT_LOG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActEvtLog as(String alias) {
        return new ActEvtLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActEvtLog as(Name alias) {
        return new ActEvtLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActEvtLog rename(String name) {
        return new ActEvtLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActEvtLog rename(Name name) {
        return new ActEvtLog(name, null);
    }
}
