/*
 * This file is generated by jOOQ.
 */
package cn.com.ho.workflow.infrastructure.db.tables;


import cn.com.ho.workflow.infrastructure.db.Indexes;
import cn.com.ho.workflow.infrastructure.db.Keys;
import cn.com.ho.workflow.infrastructure.db.Workflow;
import cn.com.ho.workflow.infrastructure.db.tables.records.TaskDefNotificationRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskDefNotification extends TableImpl<TaskDefNotificationRecord> {

    private static final long serialVersionUID = 75480248;

    /**
     * The reference instance of <code>workflow.task_def_notification</code>
     */
    public static final TaskDefNotification TASK_DEF_NOTIFICATION = new TaskDefNotification();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TaskDefNotificationRecord> getRecordType() {
        return TaskDefNotificationRecord.class;
    }

    /**
     * The column <code>workflow.task_def_notification.id</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>workflow.task_def_notification.event_name</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> EVENT_NAME = createField("event_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_notification.receiver</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> RECEIVER = createField("receiver", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_notification.type</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_notification.template_code</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> TEMPLATE_CODE = createField("template_code", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_notification.base_id</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> BASE_ID = createField("base_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_notification.process_definition_id</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> PROCESS_DEFINITION_ID = createField("process_definition_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_notification.status</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow.task_def_notification.node_code</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> NODE_CODE = createField("node_code", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_notification.create_time</code>.
     */
    public final TableField<TaskDefNotificationRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>workflow.task_def_notification.update_time</code>.
     */
    public final TableField<TaskDefNotificationRecord, LocalDateTime> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>workflow.task_def_notification.create_by</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_notification.update_by</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_notification.node_name</code>.
     */
    public final TableField<TaskDefNotificationRecord, String> NODE_NAME = createField("node_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>workflow.task_def_notification</code> table reference
     */
    public TaskDefNotification() {
        this(DSL.name("task_def_notification"), null);
    }

    /**
     * Create an aliased <code>workflow.task_def_notification</code> table reference
     */
    public TaskDefNotification(String alias) {
        this(DSL.name(alias), TASK_DEF_NOTIFICATION);
    }

    /**
     * Create an aliased <code>workflow.task_def_notification</code> table reference
     */
    public TaskDefNotification(Name alias) {
        this(alias, TASK_DEF_NOTIFICATION);
    }

    private TaskDefNotification(Name alias, Table<TaskDefNotificationRecord> aliased) {
        this(alias, aliased, null);
    }

    private TaskDefNotification(Name alias, Table<TaskDefNotificationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TaskDefNotification(Table<O> child, ForeignKey<O, TaskDefNotificationRecord> key) {
        super(child, key, TASK_DEF_NOTIFICATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Workflow.WORKFLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TASK_DEF_NOTIFICATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TaskDefNotificationRecord> getPrimaryKey() {
        return Keys.SYNTHETIC_PK_TASK_DEF_NOTIFICATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TaskDefNotificationRecord>> getKeys() {
        return Arrays.<UniqueKey<TaskDefNotificationRecord>>asList(Keys.TASK_DEF_NOTIFICATION_PKEY, Keys.SYNTHETIC_PK_TASK_DEF_NOTIFICATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefNotification as(String alias) {
        return new TaskDefNotification(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefNotification as(Name alias) {
        return new TaskDefNotification(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TaskDefNotification rename(String name) {
        return new TaskDefNotification(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TaskDefNotification rename(Name name) {
        return new TaskDefNotification(name, null);
    }
}
