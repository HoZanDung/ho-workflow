/*
 * This file is generated by jOOQ.
 */
package cn.com.ho.workflow.infrastructure.db.tables.daos;


import cn.com.ho.workflow.infrastructure.db.tables.BpmConfCountersign;
import cn.com.ho.workflow.infrastructure.db.tables.records.BpmConfCountersignRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class BpmConfCountersignDao extends DAOImpl<BpmConfCountersignRecord, cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign, String> {

    /**
     * Create a new BpmConfCountersignDao without any configuration
     */
    public BpmConfCountersignDao() {
        super(BpmConfCountersign.BPM_CONF_COUNTERSIGN, cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign.class);
    }

    /**
     * Create a new BpmConfCountersignDao with an attached configuration
     */
    @Autowired
    public BpmConfCountersignDao(Configuration configuration) {
        super(BpmConfCountersign.BPM_CONF_COUNTERSIGN, cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign> fetchById(String... values) {
        return fetch(BpmConfCountersign.BPM_CONF_COUNTERSIGN.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign fetchOneById(String value) {
        return fetchOne(BpmConfCountersign.BPM_CONF_COUNTERSIGN.ID, value);
    }

    /**
     * Fetch records that have <code>sequential IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign> fetchBySequential(String... values) {
        return fetch(BpmConfCountersign.BPM_CONF_COUNTERSIGN.SEQUENTIAL, values);
    }

    /**
     * Fetch records that have <code>participant IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign> fetchByParticipant(String... values) {
        return fetch(BpmConfCountersign.BPM_CONF_COUNTERSIGN.PARTICIPANT, values);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign> fetchByType(String... values) {
        return fetch(BpmConfCountersign.BPM_CONF_COUNTERSIGN.TYPE, values);
    }

    /**
     * Fetch records that have <code>rate IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign> fetchByRate(String... values) {
        return fetch(BpmConfCountersign.BPM_CONF_COUNTERSIGN.RATE, values);
    }

    /**
     * Fetch records that have <code>node_id IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign> fetchByNodeId(String... values) {
        return fetch(BpmConfCountersign.BPM_CONF_COUNTERSIGN.NODE_ID, values);
    }

    /**
     * Fetch records that have <code>process_model_id IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign> fetchByProcessModelId(String... values) {
        return fetch(BpmConfCountersign.BPM_CONF_COUNTERSIGN.PROCESS_MODEL_ID, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign> fetchByStatus(String... values) {
        return fetch(BpmConfCountersign.BPM_CONF_COUNTERSIGN.STATUS, values);
    }

    /**
     * Fetch records that have <code>node_name IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign> fetchByNodeName(String... values) {
        return fetch(BpmConfCountersign.BPM_CONF_COUNTERSIGN.NODE_NAME, values);
    }

    /**
     * Fetch records that have <code>node_code IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.BpmConfCountersign> fetchByNodeCode(String... values) {
        return fetch(BpmConfCountersign.BPM_CONF_COUNTERSIGN.NODE_CODE, values);
    }
}
