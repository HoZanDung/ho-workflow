/*
 * This file is generated by jOOQ.
 */
package cn.com.ho.workflow.infrastructure.db.tables.daos;


import cn.com.ho.workflow.infrastructure.db.tables.DtsPostgresHeartbeat;
import cn.com.ho.workflow.infrastructure.db.tables.records.DtsPostgresHeartbeatRecord;

import java.time.OffsetDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class DtsPostgresHeartbeatDao extends DAOImpl<DtsPostgresHeartbeatRecord, cn.com.ho.workflow.infrastructure.db.tables.pojos.DtsPostgresHeartbeat, String> {

    /**
     * Create a new DtsPostgresHeartbeatDao without any configuration
     */
    public DtsPostgresHeartbeatDao() {
        super(DtsPostgresHeartbeat.DTS_POSTGRES_HEARTBEAT, cn.com.ho.workflow.infrastructure.db.tables.pojos.DtsPostgresHeartbeat.class);
    }

    /**
     * Create a new DtsPostgresHeartbeatDao with an attached configuration
     */
    @Autowired
    public DtsPostgresHeartbeatDao(Configuration configuration) {
        super(DtsPostgresHeartbeat.DTS_POSTGRES_HEARTBEAT, cn.com.ho.workflow.infrastructure.db.tables.pojos.DtsPostgresHeartbeat.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.com.ho.workflow.infrastructure.db.tables.pojos.DtsPostgresHeartbeat object) {
        return object.getSlotName();
    }

    /**
     * Fetch records that have <code>slot_name IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.DtsPostgresHeartbeat> fetchBySlotName(String... values) {
        return fetch(DtsPostgresHeartbeat.DTS_POSTGRES_HEARTBEAT.SLOT_NAME, values);
    }

    /**
     * Fetch a unique record that has <code>slot_name = value</code>
     */
    public cn.com.ho.workflow.infrastructure.db.tables.pojos.DtsPostgresHeartbeat fetchOneBySlotName(String value) {
        return fetchOne(DtsPostgresHeartbeat.DTS_POSTGRES_HEARTBEAT.SLOT_NAME, value);
    }

    /**
     * Fetch records that have <code>revice_time IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.DtsPostgresHeartbeat> fetchByReviceTime(Long... values) {
        return fetch(DtsPostgresHeartbeat.DTS_POSTGRES_HEARTBEAT.REVICE_TIME, values);
    }

    /**
     * Fetch records that have <code>revice_lsn IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.DtsPostgresHeartbeat> fetchByReviceLsn(String... values) {
        return fetch(DtsPostgresHeartbeat.DTS_POSTGRES_HEARTBEAT.REVICE_LSN, values);
    }

    /**
     * Fetch records that have <code>flushed_lsn IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.DtsPostgresHeartbeat> fetchByFlushedLsn(String... values) {
        return fetch(DtsPostgresHeartbeat.DTS_POSTGRES_HEARTBEAT.FLUSHED_LSN, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.DtsPostgresHeartbeat> fetchByUpdateTime(OffsetDateTime... values) {
        return fetch(DtsPostgresHeartbeat.DTS_POSTGRES_HEARTBEAT.UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>dts_service_time IN (values)</code>
     */
    public List<cn.com.ho.workflow.infrastructure.db.tables.pojos.DtsPostgresHeartbeat> fetchByDtsServiceTime(Long... values) {
        return fetch(DtsPostgresHeartbeat.DTS_POSTGRES_HEARTBEAT.DTS_SERVICE_TIME, values);
    }
}
