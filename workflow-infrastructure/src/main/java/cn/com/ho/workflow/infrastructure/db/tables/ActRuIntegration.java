/*
 * This file is generated by jOOQ.
 */
package cn.com.ho.workflow.infrastructure.db.tables;


import cn.com.ho.workflow.infrastructure.db.Indexes;
import cn.com.ho.workflow.infrastructure.db.Keys;
import cn.com.ho.workflow.infrastructure.db.Workflow;
import cn.com.ho.workflow.infrastructure.db.tables.records.ActRuIntegrationRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActRuIntegration extends TableImpl<ActRuIntegrationRecord> {

    private static final long serialVersionUID = 399872516;

    /**
     * The reference instance of <code>workflow.act_ru_integration</code>
     */
    public static final ActRuIntegration ACT_RU_INTEGRATION = new ActRuIntegration();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActRuIntegrationRecord> getRecordType() {
        return ActRuIntegrationRecord.class;
    }

    /**
     * The column <code>workflow.act_ru_integration.id_</code>.
     */
    public final TableField<ActRuIntegrationRecord, String> ID_ = createField("id_", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>workflow.act_ru_integration.execution_id_</code>.
     */
    public final TableField<ActRuIntegrationRecord, String> EXECUTION_ID_ = createField("execution_id_", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>workflow.act_ru_integration.process_instance_id_</code>.
     */
    public final TableField<ActRuIntegrationRecord, String> PROCESS_INSTANCE_ID_ = createField("process_instance_id_", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>workflow.act_ru_integration.proc_def_id_</code>.
     */
    public final TableField<ActRuIntegrationRecord, String> PROC_DEF_ID_ = createField("proc_def_id_", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>workflow.act_ru_integration.flow_node_id_</code>.
     */
    public final TableField<ActRuIntegrationRecord, String> FLOW_NODE_ID_ = createField("flow_node_id_", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>workflow.act_ru_integration.created_date_</code>.
     */
    public final TableField<ActRuIntegrationRecord, LocalDateTime> CREATED_DATE_ = createField("created_date_", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>workflow.act_ru_integration</code> table reference
     */
    public ActRuIntegration() {
        this(DSL.name("act_ru_integration"), null);
    }

    /**
     * Create an aliased <code>workflow.act_ru_integration</code> table reference
     */
    public ActRuIntegration(String alias) {
        this(DSL.name(alias), ACT_RU_INTEGRATION);
    }

    /**
     * Create an aliased <code>workflow.act_ru_integration</code> table reference
     */
    public ActRuIntegration(Name alias) {
        this(alias, ACT_RU_INTEGRATION);
    }

    private ActRuIntegration(Name alias, Table<ActRuIntegrationRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActRuIntegration(Name alias, Table<ActRuIntegrationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ActRuIntegration(Table<O> child, ForeignKey<O, ActRuIntegrationRecord> key) {
        super(child, key, ACT_RU_INTEGRATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Workflow.WORKFLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACT_RU_INTEGRATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActRuIntegrationRecord> getPrimaryKey() {
        return Keys.ACT_RU_INTEGRATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActRuIntegrationRecord>> getKeys() {
        return Arrays.<UniqueKey<ActRuIntegrationRecord>>asList(Keys.ACT_RU_INTEGRATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ActRuIntegrationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ActRuIntegrationRecord, ?>>asList(Keys.ACT_RU_INTEGRATION__ACT_FK_INT_EXECUTION, Keys.ACT_RU_INTEGRATION__ACT_FK_INT_PROC_INST, Keys.ACT_RU_INTEGRATION__ACT_FK_INT_PROC_DEF);
    }

    public ActRuExecution actRuIntegration_ActFkIntExecution() {
        return new ActRuExecution(this, Keys.ACT_RU_INTEGRATION__ACT_FK_INT_EXECUTION);
    }

    public ActRuExecution actRuIntegration_ActFkIntProcInst() {
        return new ActRuExecution(this, Keys.ACT_RU_INTEGRATION__ACT_FK_INT_PROC_INST);
    }

    public ActReProcdef actReProcdef() {
        return new ActReProcdef(this, Keys.ACT_RU_INTEGRATION__ACT_FK_INT_PROC_DEF);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActRuIntegration as(String alias) {
        return new ActRuIntegration(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActRuIntegration as(Name alias) {
        return new ActRuIntegration(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuIntegration rename(String name) {
        return new ActRuIntegration(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuIntegration rename(Name name) {
        return new ActRuIntegration(name, null);
    }
}
