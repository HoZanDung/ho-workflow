/*
 * This file is generated by jOOQ.
 */
package cn.com.ho.workflow.infrastructure.db.tables.records;


import cn.com.ho.workflow.infrastructure.db.tables.ActRuExecution;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActRuExecutionRecord extends UpdatableRecordImpl<ActRuExecutionRecord> {

    private static final long serialVersionUID = -1955472490;

    /**
     * Setter for <code>workflow.act_ru_execution.id_</code>.
     */
    public void setId_(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.id_</code>.
     */
    public String getId_() {
        return (String) get(0);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.rev_</code>.
     */
    public void setRev_(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.rev_</code>.
     */
    public Integer getRev_() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.proc_inst_id_</code>.
     */
    public void setProcInstId_(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.proc_inst_id_</code>.
     */
    public String getProcInstId_() {
        return (String) get(2);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.business_key_</code>.
     */
    public void setBusinessKey_(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.business_key_</code>.
     */
    public String getBusinessKey_() {
        return (String) get(3);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.parent_id_</code>.
     */
    public void setParentId_(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.parent_id_</code>.
     */
    public String getParentId_() {
        return (String) get(4);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.proc_def_id_</code>.
     */
    public void setProcDefId_(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.proc_def_id_</code>.
     */
    public String getProcDefId_() {
        return (String) get(5);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.super_exec_</code>.
     */
    public void setSuperExec_(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.super_exec_</code>.
     */
    public String getSuperExec_() {
        return (String) get(6);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.root_proc_inst_id_</code>.
     */
    public void setRootProcInstId_(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.root_proc_inst_id_</code>.
     */
    public String getRootProcInstId_() {
        return (String) get(7);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.act_id_</code>.
     */
    public void setActId_(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.act_id_</code>.
     */
    public String getActId_() {
        return (String) get(8);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.is_active_</code>.
     */
    public void setIsActive_(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.is_active_</code>.
     */
    public Boolean getIsActive_() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.is_concurrent_</code>.
     */
    public void setIsConcurrent_(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.is_concurrent_</code>.
     */
    public Boolean getIsConcurrent_() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.is_scope_</code>.
     */
    public void setIsScope_(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.is_scope_</code>.
     */
    public Boolean getIsScope_() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.is_event_scope_</code>.
     */
    public void setIsEventScope_(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.is_event_scope_</code>.
     */
    public Boolean getIsEventScope_() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.is_mi_root_</code>.
     */
    public void setIsMiRoot_(Boolean value) {
        set(13, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.is_mi_root_</code>.
     */
    public Boolean getIsMiRoot_() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.suspension_state_</code>.
     */
    public void setSuspensionState_(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.suspension_state_</code>.
     */
    public Integer getSuspensionState_() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.cached_ent_state_</code>.
     */
    public void setCachedEntState_(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.cached_ent_state_</code>.
     */
    public Integer getCachedEntState_() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.tenant_id_</code>.
     */
    public void setTenantId_(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.tenant_id_</code>.
     */
    public String getTenantId_() {
        return (String) get(16);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.name_</code>.
     */
    public void setName_(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.name_</code>.
     */
    public String getName_() {
        return (String) get(17);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.start_time_</code>.
     */
    public void setStartTime_(LocalDateTime value) {
        set(18, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.start_time_</code>.
     */
    public LocalDateTime getStartTime_() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.start_user_id_</code>.
     */
    public void setStartUserId_(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.start_user_id_</code>.
     */
    public String getStartUserId_() {
        return (String) get(19);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.lock_time_</code>.
     */
    public void setLockTime_(LocalDateTime value) {
        set(20, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.lock_time_</code>.
     */
    public LocalDateTime getLockTime_() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.is_count_enabled_</code>.
     */
    public void setIsCountEnabled_(Boolean value) {
        set(21, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.is_count_enabled_</code>.
     */
    public Boolean getIsCountEnabled_() {
        return (Boolean) get(21);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.evt_subscr_count_</code>.
     */
    public void setEvtSubscrCount_(Integer value) {
        set(22, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.evt_subscr_count_</code>.
     */
    public Integer getEvtSubscrCount_() {
        return (Integer) get(22);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.task_count_</code>.
     */
    public void setTaskCount_(Integer value) {
        set(23, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.task_count_</code>.
     */
    public Integer getTaskCount_() {
        return (Integer) get(23);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.job_count_</code>.
     */
    public void setJobCount_(Integer value) {
        set(24, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.job_count_</code>.
     */
    public Integer getJobCount_() {
        return (Integer) get(24);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.timer_job_count_</code>.
     */
    public void setTimerJobCount_(Integer value) {
        set(25, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.timer_job_count_</code>.
     */
    public Integer getTimerJobCount_() {
        return (Integer) get(25);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.susp_job_count_</code>.
     */
    public void setSuspJobCount_(Integer value) {
        set(26, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.susp_job_count_</code>.
     */
    public Integer getSuspJobCount_() {
        return (Integer) get(26);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.deadletter_job_count_</code>.
     */
    public void setDeadletterJobCount_(Integer value) {
        set(27, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.deadletter_job_count_</code>.
     */
    public Integer getDeadletterJobCount_() {
        return (Integer) get(27);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.var_count_</code>.
     */
    public void setVarCount_(Integer value) {
        set(28, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.var_count_</code>.
     */
    public Integer getVarCount_() {
        return (Integer) get(28);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.id_link_count_</code>.
     */
    public void setIdLinkCount_(Integer value) {
        set(29, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.id_link_count_</code>.
     */
    public Integer getIdLinkCount_() {
        return (Integer) get(29);
    }

    /**
     * Setter for <code>workflow.act_ru_execution.app_version_</code>.
     */
    public void setAppVersion_(Integer value) {
        set(30, value);
    }

    /**
     * Getter for <code>workflow.act_ru_execution.app_version_</code>.
     */
    public Integer getAppVersion_() {
        return (Integer) get(30);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActRuExecutionRecord
     */
    public ActRuExecutionRecord() {
        super(ActRuExecution.ACT_RU_EXECUTION);
    }

    /**
     * Create a detached, initialised ActRuExecutionRecord
     */
    public ActRuExecutionRecord(String id_, Integer rev_, String procInstId_, String businessKey_, String parentId_, String procDefId_, String superExec_, String rootProcInstId_, String actId_, Boolean isActive_, Boolean isConcurrent_, Boolean isScope_, Boolean isEventScope_, Boolean isMiRoot_, Integer suspensionState_, Integer cachedEntState_, String tenantId_, String name_, LocalDateTime startTime_, String startUserId_, LocalDateTime lockTime_, Boolean isCountEnabled_, Integer evtSubscrCount_, Integer taskCount_, Integer jobCount_, Integer timerJobCount_, Integer suspJobCount_, Integer deadletterJobCount_, Integer varCount_, Integer idLinkCount_, Integer appVersion_) {
        super(ActRuExecution.ACT_RU_EXECUTION);

        set(0, id_);
        set(1, rev_);
        set(2, procInstId_);
        set(3, businessKey_);
        set(4, parentId_);
        set(5, procDefId_);
        set(6, superExec_);
        set(7, rootProcInstId_);
        set(8, actId_);
        set(9, isActive_);
        set(10, isConcurrent_);
        set(11, isScope_);
        set(12, isEventScope_);
        set(13, isMiRoot_);
        set(14, suspensionState_);
        set(15, cachedEntState_);
        set(16, tenantId_);
        set(17, name_);
        set(18, startTime_);
        set(19, startUserId_);
        set(20, lockTime_);
        set(21, isCountEnabled_);
        set(22, evtSubscrCount_);
        set(23, taskCount_);
        set(24, jobCount_);
        set(25, timerJobCount_);
        set(26, suspJobCount_);
        set(27, deadletterJobCount_);
        set(28, varCount_);
        set(29, idLinkCount_);
        set(30, appVersion_);
    }
}
