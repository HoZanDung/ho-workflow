/*
 * This file is generated by jOOQ.
 */
package cn.com.ho.workflow.infrastructure.db.tables;


import cn.com.ho.workflow.infrastructure.db.Indexes;
import cn.com.ho.workflow.infrastructure.db.Keys;
import cn.com.ho.workflow.infrastructure.db.Workflow;
import cn.com.ho.workflow.infrastructure.db.tables.records.TaskDefOperationRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskDefOperation extends TableImpl<TaskDefOperationRecord> {

    private static final long serialVersionUID = 2091739261;

    /**
     * The reference instance of <code>workflow.task_def_operation</code>
     */
    public static final TaskDefOperation TASK_DEF_OPERATION = new TaskDefOperation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TaskDefOperationRecord> getRecordType() {
        return TaskDefOperationRecord.class;
    }

    /**
     * The column <code>workflow.task_def_operation.id</code>.
     */
    public final TableField<TaskDefOperationRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>workflow.task_def_operation.value</code>.
     */
    public final TableField<TaskDefOperationRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.status</code>.
     */
    public final TableField<TaskDefOperationRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow.task_def_operation.priority</code>.
     */
    public final TableField<TaskDefOperationRecord, Integer> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>workflow.task_def_operation.base_id</code>.
     */
    public final TableField<TaskDefOperationRecord, String> BASE_ID = createField("base_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.process_definition_id</code>.
     */
    public final TableField<TaskDefOperationRecord, String> PROCESS_DEFINITION_ID = createField("process_definition_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.flow_method</code>.
     */
    public final TableField<TaskDefOperationRecord, String> FLOW_METHOD = createField("flow_method", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.op_js_name</code>.
     */
    public final TableField<TaskDefOperationRecord, String> OP_JS_NAME = createField("op_js_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.op_url</code>.
     */
    public final TableField<TaskDefOperationRecord, String> OP_URL = createField("op_url", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.op_expr</code>.
     */
    public final TableField<TaskDefOperationRecord, String> OP_EXPR = createField("op_expr", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.node_code</code>.
     */
    public final TableField<TaskDefOperationRecord, String> NODE_CODE = createField("node_code", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.create_time</code>.
     */
    public final TableField<TaskDefOperationRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>workflow.task_def_operation.update_time</code>.
     */
    public final TableField<TaskDefOperationRecord, LocalDateTime> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>workflow.task_def_operation.create_by</code>.
     */
    public final TableField<TaskDefOperationRecord, String> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.update_by</code>.
     */
    public final TableField<TaskDefOperationRecord, String> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.btn_class</code>.
     */
    public final TableField<TaskDefOperationRecord, String> BTN_CLASS = createField("btn_class", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.op_js_param</code>.
     */
    public final TableField<TaskDefOperationRecord, String> OP_JS_PARAM = createField("op_js_param", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.mop_js_name</code>.
     */
    public final TableField<TaskDefOperationRecord, String> MOP_JS_NAME = createField("mop_js_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.mop_url</code>.
     */
    public final TableField<TaskDefOperationRecord, String> MOP_URL = createField("mop_url", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.mb_tn_class</code>.
     */
    public final TableField<TaskDefOperationRecord, String> MB_TN_CLASS = createField("mb_tn_class", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.task_def_operation.node_name</code>.
     */
    public final TableField<TaskDefOperationRecord, String> NODE_NAME = createField("node_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>workflow.task_def_operation</code> table reference
     */
    public TaskDefOperation() {
        this(DSL.name("task_def_operation"), null);
    }

    /**
     * Create an aliased <code>workflow.task_def_operation</code> table reference
     */
    public TaskDefOperation(String alias) {
        this(DSL.name(alias), TASK_DEF_OPERATION);
    }

    /**
     * Create an aliased <code>workflow.task_def_operation</code> table reference
     */
    public TaskDefOperation(Name alias) {
        this(alias, TASK_DEF_OPERATION);
    }

    private TaskDefOperation(Name alias, Table<TaskDefOperationRecord> aliased) {
        this(alias, aliased, null);
    }

    private TaskDefOperation(Name alias, Table<TaskDefOperationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TaskDefOperation(Table<O> child, ForeignKey<O, TaskDefOperationRecord> key) {
        super(child, key, TASK_DEF_OPERATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Workflow.WORKFLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TASK_DEF_OPERATION_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TaskDefOperationRecord> getPrimaryKey() {
        return Keys.SYNTHETIC_PK_TASK_DEF_OPERATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TaskDefOperationRecord>> getKeys() {
        return Arrays.<UniqueKey<TaskDefOperationRecord>>asList(Keys.TASK_DEF_OPERATION_PK, Keys.SYNTHETIC_PK_TASK_DEF_OPERATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefOperation as(String alias) {
        return new TaskDefOperation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefOperation as(Name alias) {
        return new TaskDefOperation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TaskDefOperation rename(String name) {
        return new TaskDefOperation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TaskDefOperation rename(Name name) {
        return new TaskDefOperation(name, null);
    }
}
