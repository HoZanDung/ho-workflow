/*
 * This file is generated by jOOQ.
 */
package cn.com.ho.workflow.infrastructure.db.tables.records;


import cn.com.ho.workflow.infrastructure.db.tables.TaskDefBase;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskDefBaseRecord extends UpdatableRecordImpl<TaskDefBaseRecord> implements Record18<String, String, String, String, String, String, Integer, String, String, String, String, LocalDateTime, LocalDateTime, String, String, String, String, String> {

    private static final long serialVersionUID = -2027905676;

    /**
     * Setter for <code>workflow.task_def_base.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>workflow.task_def_base.code</code>.
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>workflow.task_def_base.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>workflow.task_def_base.process_definition_id</code>.
     */
    public void setProcessDefinitionId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.process_definition_id</code>.
     */
    public String getProcessDefinitionId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>workflow.task_def_base.status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>workflow.task_def_base.skip</code>.
     */
    public void setSkip(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.skip</code>.
     */
    public String getSkip() {
        return (String) get(5);
    }

    /**
     * Setter for <code>workflow.task_def_base.countersign_rate</code>.
     */
    public void setCountersignRate(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.countersign_rate</code>.
     */
    public Integer getCountersignRate() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>workflow.task_def_base.countersign_strategy</code>.
     */
    public void setCountersignStrategy(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.countersign_strategy</code>.
     */
    public String getCountersignStrategy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>workflow.task_def_base.countersign_user</code>.
     */
    public void setCountersignUser(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.countersign_user</code>.
     */
    public String getCountersignUser() {
        return (String) get(8);
    }

    /**
     * Setter for <code>workflow.task_def_base.countersign_type</code>.
     */
    public void setCountersignType(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.countersign_type</code>.
     */
    public String getCountersignType() {
        return (String) get(9);
    }

    /**
     * Setter for <code>workflow.task_def_base.assign_strategy</code>.
     */
    public void setAssignStrategy(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.assign_strategy</code>.
     */
    public String getAssignStrategy() {
        return (String) get(10);
    }

    /**
     * Setter for <code>workflow.task_def_base.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>workflow.task_def_base.update_time</code>.
     */
    public void setUpdateTime(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>workflow.task_def_base.create_by</code>.
     */
    public void setCreateBy(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.create_by</code>.
     */
    public String getCreateBy() {
        return (String) get(13);
    }

    /**
     * Setter for <code>workflow.task_def_base.update_by</code>.
     */
    public void setUpdateBy(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.update_by</code>.
     */
    public String getUpdateBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>workflow.task_def_base.use_dept_role</code>.
     */
    public void setUseDeptRole(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.use_dept_role</code>.
     */
    public String getUseDeptRole() {
        return (String) get(15);
    }

    /**
     * Setter for <code>workflow.task_def_base.grab_order</code>.
     */
    public void setGrabOrder(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.grab_order</code>.
     */
    public String getGrabOrder() {
        return (String) get(16);
    }

    /**
     * Setter for <code>workflow.task_def_base.skip_node_expr</code>.
     */
    public void setSkipNodeExpr(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>workflow.task_def_base.skip_node_expr</code>.
     */
    public String getSkipNodeExpr() {
        return (String) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<String, String, String, String, String, String, Integer, String, String, String, String, LocalDateTime, LocalDateTime, String, String, String, String, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<String, String, String, String, String, String, Integer, String, String, String, String, LocalDateTime, LocalDateTime, String, String, String, String, String> valuesRow() {
        return (Row18) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return TaskDefBase.TASK_DEF_BASE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TaskDefBase.TASK_DEF_BASE.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TaskDefBase.TASK_DEF_BASE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TaskDefBase.TASK_DEF_BASE.PROCESS_DEFINITION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return TaskDefBase.TASK_DEF_BASE.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return TaskDefBase.TASK_DEF_BASE.SKIP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return TaskDefBase.TASK_DEF_BASE.COUNTERSIGN_RATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return TaskDefBase.TASK_DEF_BASE.COUNTERSIGN_STRATEGY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return TaskDefBase.TASK_DEF_BASE.COUNTERSIGN_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return TaskDefBase.TASK_DEF_BASE.COUNTERSIGN_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return TaskDefBase.TASK_DEF_BASE.ASSIGN_STRATEGY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field12() {
        return TaskDefBase.TASK_DEF_BASE.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field13() {
        return TaskDefBase.TASK_DEF_BASE.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return TaskDefBase.TASK_DEF_BASE.CREATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return TaskDefBase.TASK_DEF_BASE.UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return TaskDefBase.TASK_DEF_BASE.USE_DEPT_ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return TaskDefBase.TASK_DEF_BASE.GRAB_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field18() {
        return TaskDefBase.TASK_DEF_BASE.SKIP_NODE_EXPR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getProcessDefinitionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSkip();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getCountersignRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getCountersignStrategy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getCountersignUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getCountersignType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getAssignStrategy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component12() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component13() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getUseDeptRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getGrabOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component18() {
        return getSkipNodeExpr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getProcessDefinitionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSkip();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getCountersignRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getCountersignStrategy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getCountersignUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getCountersignType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getAssignStrategy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value12() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value13() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getCreateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getUseDeptRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getGrabOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value18() {
        return getSkipNodeExpr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value2(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value4(String value) {
        setProcessDefinitionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value5(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value6(String value) {
        setSkip(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value7(Integer value) {
        setCountersignRate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value8(String value) {
        setCountersignStrategy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value9(String value) {
        setCountersignUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value10(String value) {
        setCountersignType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value11(String value) {
        setAssignStrategy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value12(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value13(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value14(String value) {
        setCreateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value15(String value) {
        setUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value16(String value) {
        setUseDeptRole(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value17(String value) {
        setGrabOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord value18(String value) {
        setSkipNodeExpr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskDefBaseRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Integer value7, String value8, String value9, String value10, String value11, LocalDateTime value12, LocalDateTime value13, String value14, String value15, String value16, String value17, String value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskDefBaseRecord
     */
    public TaskDefBaseRecord() {
        super(TaskDefBase.TASK_DEF_BASE);
    }

    /**
     * Create a detached, initialised TaskDefBaseRecord
     */
    public TaskDefBaseRecord(String id, String code, String name, String processDefinitionId, String status, String skip, Integer countersignRate, String countersignStrategy, String countersignUser, String countersignType, String assignStrategy, LocalDateTime createTime, LocalDateTime updateTime, String createBy, String updateBy, String useDeptRole, String grabOrder, String skipNodeExpr) {
        super(TaskDefBase.TASK_DEF_BASE);

        set(0, id);
        set(1, code);
        set(2, name);
        set(3, processDefinitionId);
        set(4, status);
        set(5, skip);
        set(6, countersignRate);
        set(7, countersignStrategy);
        set(8, countersignUser);
        set(9, countersignType);
        set(10, assignStrategy);
        set(11, createTime);
        set(12, updateTime);
        set(13, createBy);
        set(14, updateBy);
        set(15, useDeptRole);
        set(16, grabOrder);
        set(17, skipNodeExpr);
    }
}
